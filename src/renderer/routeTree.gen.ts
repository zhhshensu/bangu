/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WelcomeImport } from './routes/welcome'
import { Route as IndexImport } from './routes/index'
import { Route as ProjectsIndexImport } from './routes/projects/index'
import { Route as WelcomeSettingsImport } from './routes/welcome/settings'
import { Route as WelcomeProjectsImport } from './routes/welcome/projects'
import { Route as WelcomeProfileImport } from './routes/welcome/profile'
import { Route as ProjectsProjectIdImport } from './routes/projects/$projectId'
import { Route as ProjectsProjectIdMergerOrgIdImport } from './routes/projects/$projectId/merger/$orgId'

// Create/Update Routes

const WelcomeRoute = WelcomeImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsIndexRoute = ProjectsIndexImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRoute,
} as any)

const WelcomeSettingsRoute = WelcomeSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => WelcomeRoute,
} as any)

const WelcomeProjectsRoute = WelcomeProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => WelcomeRoute,
} as any)

const WelcomeProfileRoute = WelcomeProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => WelcomeRoute,
} as any)

const ProjectsProjectIdRoute = ProjectsProjectIdImport.update({
  id: '/projects/$projectId',
  path: '/projects/$projectId',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsProjectIdMergerOrgIdRoute =
  ProjectsProjectIdMergerOrgIdImport.update({
    id: '/merger/$orgId',
    path: '/merger/$orgId',
    getParentRoute: () => ProjectsProjectIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/welcome': {
      id: '/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof WelcomeImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId': {
      id: '/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdImport
      parentRoute: typeof rootRoute
    }
    '/welcome/profile': {
      id: '/welcome/profile'
      path: '/profile'
      fullPath: '/welcome/profile'
      preLoaderRoute: typeof WelcomeProfileImport
      parentRoute: typeof WelcomeImport
    }
    '/welcome/projects': {
      id: '/welcome/projects'
      path: '/projects'
      fullPath: '/welcome/projects'
      preLoaderRoute: typeof WelcomeProjectsImport
      parentRoute: typeof WelcomeImport
    }
    '/welcome/settings': {
      id: '/welcome/settings'
      path: '/settings'
      fullPath: '/welcome/settings'
      preLoaderRoute: typeof WelcomeSettingsImport
      parentRoute: typeof WelcomeImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId/merger/$orgId': {
      id: '/projects/$projectId/merger/$orgId'
      path: '/merger/$orgId'
      fullPath: '/projects/$projectId/merger/$orgId'
      preLoaderRoute: typeof ProjectsProjectIdMergerOrgIdImport
      parentRoute: typeof ProjectsProjectIdImport
    }
  }
}

// Create and export the route tree

interface WelcomeRouteChildren {
  WelcomeProfileRoute: typeof WelcomeProfileRoute
  WelcomeProjectsRoute: typeof WelcomeProjectsRoute
  WelcomeSettingsRoute: typeof WelcomeSettingsRoute
}

const WelcomeRouteChildren: WelcomeRouteChildren = {
  WelcomeProfileRoute: WelcomeProfileRoute,
  WelcomeProjectsRoute: WelcomeProjectsRoute,
  WelcomeSettingsRoute: WelcomeSettingsRoute,
}

const WelcomeRouteWithChildren =
  WelcomeRoute._addFileChildren(WelcomeRouteChildren)

interface ProjectsProjectIdRouteChildren {
  ProjectsProjectIdMergerOrgIdRoute: typeof ProjectsProjectIdMergerOrgIdRoute
}

const ProjectsProjectIdRouteChildren: ProjectsProjectIdRouteChildren = {
  ProjectsProjectIdMergerOrgIdRoute: ProjectsProjectIdMergerOrgIdRoute,
}

const ProjectsProjectIdRouteWithChildren =
  ProjectsProjectIdRoute._addFileChildren(ProjectsProjectIdRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/welcome': typeof WelcomeRouteWithChildren
  '/projects/$projectId': typeof ProjectsProjectIdRouteWithChildren
  '/welcome/profile': typeof WelcomeProfileRoute
  '/welcome/projects': typeof WelcomeProjectsRoute
  '/welcome/settings': typeof WelcomeSettingsRoute
  '/projects': typeof ProjectsIndexRoute
  '/projects/$projectId/merger/$orgId': typeof ProjectsProjectIdMergerOrgIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/welcome': typeof WelcomeRouteWithChildren
  '/projects/$projectId': typeof ProjectsProjectIdRouteWithChildren
  '/welcome/profile': typeof WelcomeProfileRoute
  '/welcome/projects': typeof WelcomeProjectsRoute
  '/welcome/settings': typeof WelcomeSettingsRoute
  '/projects': typeof ProjectsIndexRoute
  '/projects/$projectId/merger/$orgId': typeof ProjectsProjectIdMergerOrgIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/welcome': typeof WelcomeRouteWithChildren
  '/projects/$projectId': typeof ProjectsProjectIdRouteWithChildren
  '/welcome/profile': typeof WelcomeProfileRoute
  '/welcome/projects': typeof WelcomeProjectsRoute
  '/welcome/settings': typeof WelcomeSettingsRoute
  '/projects/': typeof ProjectsIndexRoute
  '/projects/$projectId/merger/$orgId': typeof ProjectsProjectIdMergerOrgIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/welcome'
    | '/projects/$projectId'
    | '/welcome/profile'
    | '/welcome/projects'
    | '/welcome/settings'
    | '/projects'
    | '/projects/$projectId/merger/$orgId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/welcome'
    | '/projects/$projectId'
    | '/welcome/profile'
    | '/welcome/projects'
    | '/welcome/settings'
    | '/projects'
    | '/projects/$projectId/merger/$orgId'
  id:
    | '__root__'
    | '/'
    | '/welcome'
    | '/projects/$projectId'
    | '/welcome/profile'
    | '/welcome/projects'
    | '/welcome/settings'
    | '/projects/'
    | '/projects/$projectId/merger/$orgId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WelcomeRoute: typeof WelcomeRouteWithChildren
  ProjectsProjectIdRoute: typeof ProjectsProjectIdRouteWithChildren
  ProjectsIndexRoute: typeof ProjectsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WelcomeRoute: WelcomeRouteWithChildren,
  ProjectsProjectIdRoute: ProjectsProjectIdRouteWithChildren,
  ProjectsIndexRoute: ProjectsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/welcome",
        "/projects/$projectId",
        "/projects/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/welcome": {
      "filePath": "welcome.tsx",
      "children": [
        "/welcome/profile",
        "/welcome/projects",
        "/welcome/settings"
      ]
    },
    "/projects/$projectId": {
      "filePath": "projects/$projectId.tsx",
      "children": [
        "/projects/$projectId/merger/$orgId"
      ]
    },
    "/welcome/profile": {
      "filePath": "welcome/profile.tsx",
      "parent": "/welcome"
    },
    "/welcome/projects": {
      "filePath": "welcome/projects.tsx",
      "parent": "/welcome"
    },
    "/welcome/settings": {
      "filePath": "welcome/settings.tsx",
      "parent": "/welcome"
    },
    "/projects/": {
      "filePath": "projects/index.tsx"
    },
    "/projects/$projectId/merger/$orgId": {
      "filePath": "projects/$projectId/merger/$orgId.tsx",
      "parent": "/projects/$projectId"
    }
  }
}
ROUTE_MANIFEST_END */
